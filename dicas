Docker info

Web server: http://localhost/
PHPMyAdmin: http://localhost:8080
Local emails: http://localhost:8025

https://github.com/clean-docker/Magento2

Magento Admin Info:

Username: lucianoalbis
Email: lucianosilva@ciant.com
Password: Mingu@161
Your Store Address: http://localhost/m2/
Magento Admin Address: http://localhost/m2/admin/
Encryption Key: 47f66bde230d378f8658f1e482cc84b1
Database Name: magento
Username: root
Password: root

KEY-MYMAGENTO2
Public Key: 06c7f153c5dff2df1d209ea57d3a6258
Private Key: 38a8a6bb1b48a71b5056220c896e8856

User customer magento
User: lucianosilva@ciandt.com
Password: Mingu@161

docker exec -it f003e38f5a07 bash

Rest
http://localhost/m2/rest/V1/integration/admin/token?username=lucianoalbis&password=Mingu@161
http://localhost/m2/swagger

Integration REST API
-> https://www.magenteiro.com/blog/magento-2/api-como-usar-exemplos/

=====
Errors and solve
=====

https://www.magenteiro.com/blog/magento-2/erros-e-problemas-comuns-no-magento-2-e-como-resolver/

====
Delete data to n98
====

./n98 config:store:delete web/cookie/cookie_domain && ./n98 cache:clean config

=====
Usando a API via swagger 
=====

http://localhost/m2/swagger

=====
Cloud Microsoft
=====

https://docs.microsoft.com/en-us/cli/azure/account?view=azure-cli-latest

Comandos: az account list

====
Toda vez que for reiniciar a mÃ¡quina tenho que rodar o comando
docker inspect f9056807e5ef
para pegar o ip novo do banco

docker inspect fd5c9d730730
para pegar o ip do rabbitmq e setar no env

====
Install Magento 1
====

https://github.com/clean-docker/Magento1


=================
Magento Login
=================

lucianoalbis@yahoo.com.br
Mingu@161


============
Conteiners
============

docker stop f003e38f5a07 0ee468aaed2a fe29ac7600d4 1cc729f2dfab 8e291e8d6fbe f9056807e5ef
docker inspect f9056807e5ef


Conteiners

-> magento2-master_apache_1        
-> magento2-master_mailhog_1       
-> magento2-master_phpmyadmin_1    
-> magento2-master_redis_1         
-> magento2-master_redis-session_1 
-> magento2-master_db_1      

===========
Usando o n98
===========

./n98 list

=========
Commands
=========

Available commands:
  help                                        Displays help for a command
  install                                     Install magento
  list                                        Lists commands
  mysql-client                                Opens mysql client by database config from env.php
  open-browser                                Open current project in browser (experimental)
  script                                      Runs multiple n98-magerun commands
  self-update                                 Updates n98-magerun2.phar to the latest version.
  selfupdate                                  Updates n98-magerun2.phar to the latest version.
  shell                                       Runs n98-magerun as shell
 admin
  admin:notifications                         Toggles admin notifications
  admin:user:change-password                  Changes the password of a adminhtml user.
  admin:user:create                           Creates an administrator
  admin:user:delete                           Delete the account of a adminhtml user.
  admin:user:list                             List admin users.
  admin:user:unlock                           Unlock Admin Account
 app
  app:config:dump                             Create dump of application
  app:config:import                           Import data from shared configuration files to appropriate data storage
  app:config:status                           Checks if config propagation requires update
 cache
  cache:clean                                 Clean magento cache
  cache:disable                               Disables Magento caches
  cache:enable                                Enables Magento caches
  cache:flush                                 Flush magento cache storage
  cache:list                                  Lists all magento caches
  cache:report                                View inside the cache
  cache:status                                Checks cache status
  cache:view                                  Prints a cache entry
 catalog
  catalog:images:resize                       Creates resized product images
  catalog:product:attributes:cleanup          Removes unused product attributes.
 config
  config:data:acl                             Prints acl.xml data as table
  config:data:di                              Dump dependency injection config
  config:sensitive:set                        Set sensitive configuration values
  config:set                                  Change system configuration
  config:show                                 Shows configuration value for given path. If path is not specified, all saved values will be shown
  config:store:delete                         Deletes a store config item
  config:store:get                            Get a store config item
  config:store:set                            Set a store config item
 cron
  cron:install                                Generates and installs crontab for current user
  cron:remove                                 Removes tasks from crontab
  cron:run                                    Runs jobs by schedule
 customer
  customer:change-password                    Changes the password of a customer.
  customer:create                             Creates a new customer/user for shop frontend.
  customer:hash:upgrade                       Upgrade customer's hash according to the latest algorithm
  customer:info                               Loads basic customer info by email address.
  customer:list                               Lists all magento customers
 db
  db:console                                  Opens mysql client by database config from env.php
  db:create                                   Create currently configured database
  db:drop                                     Drop current database
  db:dump                                     Dumps database with mysqldump cli client
  db:import                                   Imports database with mysql cli client according to database defined in env.php
  db:info                                     Dumps database informations
  db:maintain:check-tables                    Check database tables
  db:query                                    Executes an SQL query on the database defined in env.php
  db:status                                   Shows important server status information or custom selected status values
  db:variables                                Shows important variables or custom selected
 deploy
  deploy:mode:set                             Set application mode.
  deploy:mode:show                            Displays current application mode.
 design
  design:demo-notice                          Toggles demo store notice for a store view
 dev
  dev:asset:clear                             Clear static assets
  dev:console                                 Opens PHP interactive shell with initialized Mage::app() (Experimental)
  dev:di:info                                 Provides information on Dependency Injection configuration for the Command.
  dev:module:create                           Create and register a new magento module.
  dev:module:list                             List all installed modules
  dev:module:observer:list                    Lists all registered observers
  dev:profiler:disable                        Disable the profiler.
  dev:profiler:enable                         Enable the profiler.
  dev:query-log:disable                       Disable DB query logging
  dev:query-log:enable                        Enable DB query logging
  dev:report:count                            Get count of report files
  dev:source-theme:deploy                     Collects and publishes source files for theme.
  dev:symlinks                                Toggle allow symlinks setting
  dev:template-hints                          Toggles template hints
  dev:template-hints-blocks                   Toggles template hints block names
  dev:template-hints:disable                  Disable frontend template hints. A cache flush might be required.
  dev:template-hints:enable                   Enable frontend template hints. A cache flush might be required.
  dev:tests:run                               Runs tests
  dev:theme:list                              Lists all available themes
  dev:urn-catalog:generate                    Generates the catalog of URNs to *.xsd mappings for the IDE to highlight xml.
  dev:xml:convert                             Converts XML file using XSL style sheets
 dotdigital
  dotdigital:migrate                          Migrate data into email_ tables to sync with Engagement Cloud
  dotdigital:sync                             Run syncs to populate email_ tables before importing to Engagement Cloud
 downloadable
  downloadable:domains:add                    Add domains to the downloadable domains whitelist
  downloadable:domains:remove                 Remove domains from the downloadable domains whitelist
  downloadable:domains:show                   Display downloadable domains whitelist
 eav
  eav:attribute:list                          List EAV attributes
  eav:attribute:remove                        Remove attribute for a given attribute code
  eav:attribute:view                          View information about an EAV attribute
 encryption
  encryption:payment-data:update              Re-encrypts encrypted credit card data with latest encryption cipher.
 generation
  generation:flush                            Flushs generated code like factories and proxies
 i18n
  i18n:collect-phrases                        Discovers phrases in the codebase
  i18n:pack                                   Saves language package
  i18n:uninstall                              Uninstalls language packages
 index
  index:list                                  Lists all magento indexes
  index:trigger:recreate                      ReCreate all triggers
 indexer
  indexer:info                                Shows allowed Indexers
  indexer:reindex                             Reindexes Data
  indexer:reset                               Resets indexer status to invalid
  indexer:set-dimensions-mode                 Set Indexer Dimensions Mode
  indexer:set-mode                            Sets index mode type
  indexer:show-dimensions-mode                Shows Indexer Dimension Mode
  indexer:show-mode                           Shows Index Mode
  indexer:status                              Shows status of Indexer
 info
  info:adminuri                               Displays the Magento Admin URI
  info:backups:list                           Prints list of available backup files
  info:currency:list                          Displays the list of available currencies
  info:dependencies:show-framework            Shows number of dependencies on Magento framework
  info:dependencies:show-modules              Shows number of dependencies between modules
  info:dependencies:show-modules-circular     Shows number of circular dependencies between modules
  info:language:list                          Displays the list of available language locales
  info:timezone:list                          Displays the list of available timezones
 inventory
  inventory:reservation:create-compensations  Create reservations by provided compensation arguments
  inventory:reservation:list-inconsistencies  Show all orders and products with salable quantity inconsistencies
 inventory-geonames
  inventory-geonames:import                   Download and import geo names for source selection algorithm
 maintenance
  maintenance:allow-ips                       Sets maintenance mode exempt IPs
  maintenance:disable                         Disables maintenance mode
  maintenance:enable                          Enables maintenance mode
  maintenance:status                          Displays maintenance mode status
 media
  media:dump                                  Creates an archive with content of media folder.
 module
  module:config:status                        Checks the modules configuration in the 'app/etc/config.php' file and reports if they are up to date or not
  module:disable                              Disables specified modules
  module:enable                               Enables specified modules
  module:status                               Displays status of modules
  module:uninstall                            Uninstalls modules installed by composer
 msp
  msp:security:recaptcha:disable              Disable backend reCaptcha
  msp:security:tfa:disable                    Globally disable two factor auth
  msp:security:tfa:providers                  List all available providers
  msp:security:tfa:reset                      Reset configuration for one user
 newrelic
  newrelic:create:deploy-marker               Check the deploy queue for entries and create an appropriate deploy marker.
 queue
  queue:consumers:list                        List of MessageQueue consumers
  queue:consumers:start                       Start MessageQueue consumer
 sampledata
  sampledata:deploy                           Deploy sample data modules for composer-based Magento installations
  sampledata:remove                           Remove all sample data packages from composer.json
  sampledata:reset                            Reset all sample data modules for re-installation
 script
  script:repo:list                            Lists all scripts in repository
  script:repo:run                             Run script from repository
 search
  search:engine:list                          Lists all registered search engines
 setup
  setup:backup                                Takes backup of Magento Application code base, media and database
  setup:config:set                            Creates or modifies the deployment configuration
  setup:cron:run                              Runs cron job scheduled for setup application
  setup:db-data:upgrade                       Installs and upgrades data in the DB
  setup:db-declaration:generate-patch         Generate patch and put it in specific folder.
  setup:db-declaration:generate-whitelist     Generate whitelist of tables and columns that are allowed to be edited by declaration installer
  setup:db-schema:upgrade                     Installs and upgrades the DB schema
  setup:db:status                             Checks if DB schema or data requires upgrade
  setup:di:compile                            Generates DI configuration and all missing classes that can be auto-generated
  setup:install                               Installs the Magento application
  setup:performance:generate-fixtures         Generates fixtures
  setup:rollback                              Rolls back Magento Application codebase, media and database
  setup:static-content:deploy                 Deploys static view files
  setup:store-config:set                      Installs the store configuration. Deprecated since 2.2.0. Use config:set instead
  setup:uninstall                             Uninstalls the Magento application
  setup:upgrade                               Upgrades the Magento application, DB data, and schema
 store
  store:list                                  Displays the list of stores
  store:website:list                          Displays the list of websites
 sys
  sys:check                                   Checks Magento System
  sys:cron:history                            Last executed cronjobs with status.
  sys:cron:list                               Lists all cronjobs
  sys:cron:run                                Runs a cronjob by job code
  sys:cron:schedule                           Schedule a cronjob for execution right now, by job code
  sys:info                                    Prints infos about the current magento system.
  sys:maintenance                             Toggles maintenance mode if --on or --off preferences are not set
  sys:setup:change-version                    Change module resource version
  sys:setup:compare-versions                  Compare module version with setup_module table.
  sys:setup:downgrade-versions                Automatically downgrade schema and module versions
  sys:store:config:base-url:list              Lists all base urls
  sys:store:list                              Lists all installed store-views
  sys:url:list                                Get all urls.
  sys:website:list                            Lists all websites
 theme
  theme:uninstall                             Uninstalls theme
 varnish
  varnish:vcl:generate                        Generates Varnish VCL and echos it to the command line
 yotpo
  yotpo:reset                                 Reset Yotpo sync flags &/or configurations
  yotpo:sync                                  Sync Yotpo manually (reviews module)
  yotpo:update-metadata                       Manually send platform metadata to Yotpo

===========
Exemplo to create module
===========

./n98 dev:module:create Lulu Customapi

Created directory: /var/www/html/m2/app/code/Lulu/Customapi
Created directory: /var/www/html/m2/app/code/Lulu/Customapi/etc
Created file: /var/www/html/m2/app/code/Lulu/Customapi/registration.php
Created file: /var/www/html/m2/app/code/Lulu/Customapi/etc/module.xml
Created file: /var/www/html/m2/app/code/Lulu/Customapi/etc/config.xml
Created file: /var/www/html/m2/app/code/Lulu/Customapi/etc/di.xml
Created file: /var/www/html/m2/app/code/Lulu/Customapi/etc/events.xml
Created file: /var/www/html/m2/app/code/Lulu/Customapi/etc/crontab.xml

./n98 module:status
./n98 module:enable Lulu_Customapi
./n98 setup:upgrade

Ou 

./magento <commands>

++++++++++++++++
Comandos Ãºteis
++++++++++++++++

bin/magento module:enable --clear-static-content Vendor_Name
bin/magento module:disable --clear-static-content Vendor_Name


rm -rf generated
rm -rf var/generation
rm -rf var/cache
./n98 setup:di:compile
./n98 cache:clean
./n98 cache:flush

====
Config crontab
====

#~ MAGENTO START
* * * * * /usr/bin/php /var/www/html/m2/bin/magento cron:run 2>&1 | grep -v "Ran jobs by schedule" >> /var/www/html/m2/var/log/magento.cron.log
* * * * * /usr/bin/php /var/www/html/m2/update/cron.php >> /var/www/html/m2/var/log/update.cron.log
* * * * * /usr/bin/php /var/www/html/m2/bin/magento setup:cron:run >> /var/www/html/m2/var/log/setup.cron.log
#~ MAGENTO END

rabbitmq

-> https://devdocs.magento.com/guides/v2.3/install-gde/prereq/install-rabbitmq.html
-> http://172.18.0.8:15672/#/


====
Install Magento 2 and set version
====

cd ~/Documentos/Magento22-master/
docker-compose up -d
docker exec -it c9a669023f3b bash  (<Pego ido do conteiner master_apache_1>)
composer create-project --repository=https://repo.magento.com/ magento/project-community-edition=2.2.7 m2

===
Exec tests
===

php src/m2/vendor/phpunit/phpunit/phpunit -c src/m2/dev/tests/unit/phpunit.xml.dist src/m2/app/code/Belvg/CustomAPI/Test/Unit/ApiTest.php 
